0.测试hive平台
beeline -u "jdbc:hive2://bjuattdh02:10000/default" -n dw -p dw
select concat('select ''',table_name, ''' ,count(1) from ',TABLE_NAME,' union all')from information_schema.tables where TABLE_SCHEMA='etl';

1.初始化数据库
mysql -u etl -petl -h 10.4.0.156 -D etl
mysql -u disp -pdisp -h 10.4.0.156 -D disp
mysql -u root -proot -h 10.4.0.156 -D disp
10.4.2.60
http://10.4.2.60:8080/
http://10.4.2.60:8080/dispweb
http://10.4.2.60:8080/dispweb/a/login
账号/密码: dispadmin/123456

show procedure status where db='disp';
yum -y install lrzsz
yum -y install lrzsz
/usr/tomcat/apache-tomcat-8.5.8/logs


set password for disp@10.4.0.156=password('disp');
update user set authentication_string=password('root') where user='root';
update user set authentication_string=password('disp') where user='disp';
update mysql.proc set definer='disp@%' where db='disp';
create user 'disp'@'%' identified by 'disp';
drop user 'disp'@'%';
grant privileges on databasename.tablename to
grant all privileges on disp.* to 'disp'@'%';
grant create routine on disp.* to disp@'%';
grant select on mysql.proc to disp@'%';
grant all privileges on *.* to root@'%';
flush privileges;

set global log_bin_trust_function_creators=1;

print(os.path.split(os.path.realpath('/Users/wangdabin1216/git/dw/src/load')))
print(os.path.split(os.path.abspath('/Users/wangdabin1216/git/dw/src/load')))




初始化etl数据库
1.初始化mysql表结构
python init_meta_struct.py /Users/wangdabin1216/git/dw/template/meta/etl_meta_init.xlsx etl_meta_tables 1

2.初始化对应的数据
python init_meta_data.py /Users/wangdabin1216/git/dw/template/meta/etl_meta_init.xlsx etl_meta_args 1=1 1
python init_meta_data.py /Users/wangdabin1216/git/dw/template/meta/etl_meta_init.xlsx etl_load_system 1=1 1
python init_meta_data.py /Users/wangdabin1216/git/dw/template/meta/etl_meta_init.xlsx etl_meta_type_convert 1=1 1



3.初始化要入库的表
python init_meta_data.py /Users/wangdabin1216/git/dw/template/load/etl_load_cb.xlsx etl_load_table 1=1 1
python init_meta_data.py /Users/wangdabin1216/git/dw/template/load/etl_load_cb.xlsx etl_load_column 1=1 1


--------直接全量初始化
--从Excel读取表结构并在MySQL中创建表结构，并导入META_TAB_LIST = ['etl_meta_tables', 'etl_meta_args', 'etl_meta_type_convert', 'etl_load_system'] 表数据
python init_server.py -d imp -m meta -c all
python init_server.py -d imp -m trans -c tab -t f_cs_customer
python init_server.py -d imp -m load -c all
--------全量初始
   --etl_load_table, etl_load_column
   python init_server.py -d imp -m load -c all  初始化所有表
   python init_server.py -d imp -m load -c sys -s cm
   python init_server.py -d imp -m load -c file -f /etl/dw/template/load/etl_load_cm.xlsx
   python init_server.py -d imp -m check -c all
    模型层(不懂)
      python init_server.py -d imp -m trans -c tab -t f_cs_customer

不同的命令

初始化hive表
python init_load_tab.py tbo ext pb_org_info 0
python init_server.py -d ddl -l tbo -c all -s pb
python init_server.py -d ddl -l fmi -c tab -t f_cs_customer
python init_server.py -d pro -l fmi -c tab -t f_cs_customer


python init_gen_pro.py f_cs_customer



5、在inceptor中 创建ext、orc、orchs表
   --单表
   python init_load_tab.py tbo ext cm_ent_relative 1
   python init_server.py -d ddl -l tbo -c tab -t cm_ent_relative
   --系统
   python init_server.py -d ddl -l tbo -c sys -s cm 
   --全部
   python init_server.py -d ddl -l tbo -c all
   python init_server.py -d ddl -l omi -c all
   
   python init_server.py -d ddl -l fmi -c tab -t f_cs_customer
   python init_server.py -d pro -l fmi -c tab -t f_cs_customer
   python init_gen_pro.py f_cs_customer
   
6、同步cc.dw_sm_hist数据
   python init_server.py -d hist -l omi -c all
   python init_server.py -d hist -l omi -c sys -s cm
   python init_server.py -d hist -l omi -c tab -t cm_ent_relative
   python init_hist_data.py tbo omi cm_ent_relative 1
   python init_server.py -d syn -m check -c all
   
7、调度put脚本，写入外表数据
   sh load_put_file.sh cm_ent_relative 20191224
   
8、调度存储过程进行拉链处理
   beeline -u "jdbc:hive2://bjuattdh02:10000/cc" -n dw -p dw -f pkg_dw_util_body.sql 
   BEGIN cc.pkg_dw_util.pro_data_his_main('20191224','tbo.cm_ent_relative') END 
   
9、Oracle卸载数据脚本
   sqluldr2.bin  user=srcods/srcods@10.4.0.2:1521/zgcuatdb query="select * from cmsdb.ent_relative " file=/data/put/ent_relative.txt field="|"  record=0x0a safe=yes rows=100000 charset=UTF8  log=/data/put/sqluldr_ent_relative.log
   sh load_sqluldr_data.sh cm_ent_relative 20191224
   
   sqluldr2.bin  user=neutron/neutron@10.4.11.110:1521/zgcuatdb query="select * from neutron.mb_acct" file=/data/put/mb_acct.txt  field="|"  record=0x0a safe=yes rows=100000 charset=utf8  log=/data/put/sqluldr_mb_acct20200102.log
   convert(col_separator,char character set utf8)
   
10、卸载分发
    python init_server.py -d imp -m server -c all
    python init_server.py -d syn -m server -c all
	sh dsa_file_unload.sh omi.ib_ln_due_mst_hs 1 20200315
	sh dsa_file_distribute.sh rm 20200315
    sh dsa_file_ftp.sh rm 20200315
	
11、视图
	python init_server.py -d imp -m view -c tab -t etl_serve_view
	python init_server.py -d imp -m view -c all
	python init_server.py -d syn -m view -c all
	BEGIN cc.pkg_dw_util.pro_serv_view('omi.ib_ln_due_mst_hs','dsa.d_v_ib_ln_due_mst1') END 
    BEGIN cc.pkg_dw_util.pro_serv_view('omi.ib_ln_credit_apply_mst_hs','dsa.d_v_ln_credit_apply_mst') END 	
	
	--测试视图
    BEGIN pro_serv_view('omi.ib_ln_due_mst_hs','dsa.d_v_ib_ln_due_mst1') END 
    create or replace view dsa.d_v_ib_ln_due_mst1 as SELECT cc.pkg_dw_util.fun_des_name(cif_name,'n01') as cif_name,cc.pkg_dw_util.fun_des_fund(due_amt,'f01') as due_amt from omi.ib_ln_due_mst_hs
    create or replace view dsa.d_v_ib_ln_due_mst1 as SELECT cc.pkg_dw_util.fun_des_name(cif_name,'n01') as cif_name,cc.pkg_dw_util.fun_des_fund(due_amt,'f01') as due_amt from omi.ib_ln_due_mst_hs

    BEGIN pro_serv_view('omi.ib_ln_due_mst_hs','dsa.d_v_ib_ln_due_mst2') END
    create or replace view dsa.d_v_ib_ln_due_mst2 as SELECT beg_date,cc.pkg_dw_util.fun_des_cert(cif_no,'c01') as cif_no from omi.ib_ln_due_mst_hs
    create or replace view dsa.d_v_ib_ln_due_mst2 as SELECT cc.pkg_dw_util.fun_des_cert(cif_no,'c01') as cif_no,beg_date from omi.ib_ln_due_mst_hs

    BEGIN pro_serv_view('omi.ib_ln_credit_apply_mst_hs','dsa.d_v_ln_credit_apply_mst') END 
    create or replace view dsa.d_v_ln_credit_apply_mst as SELECT cert_no,cc.pkg_dw_util.fun_des_name(cif_name,'n02') as cif_name from omi.ib_ln_credit_apply_mst_hs where overdt='20991231'
    create or replace view dsa.d_v_ln_credit_apply_mst as SELECT cc.pkg_dw_util.fun_des_name(cif_name,'n02') as cif_name,cert_no from omi.ib_ln_credit_apply_mst_hs where overdt='20991231'

    BEGIN pro_serv_view('omi.cb_cif_client_corp_hs','dsa.d_v_cb_cif_client_corp_hs') END 
    create or replace view dsa.d_v_cb_cif_client_corp_hs as SELECT * from omi.cb_cif_client_corp_hs

12、检核
    --检核过程：pro_check_cols_quality
    python init_server.py -d imp -m check -c all
    python init_server.py -d syn -m check -c all
    BEGIN cc.pkg_dw_util.pro_check_cols_quality('20191224','omi.cm_ent_relative_hs') END 
    --表字段及规则
    select a.* , b.rule_expr , b.rule_desc
    from cc.dw_sm_check_cols_rule a
    inner join cc.dw_sm_check_quality_rules b
    on a.rule_no = b.rule_no
    --结果查询
    select * from cc.dw_sm_check_result;

---脱敏函数
select ustomerid,stocks,relativecpname
,cc.pkg_dw_util.fun_des_acct(ustomerid,'a03')
,cc.pkg_dw_util.fun_des_cert(ustomerid,'c03') 
,cc.pkg_dw_util.fun_des_fund(stocks,'f02')
,cc.pkg_dw_util.fun_des_local(relativecpname,'l02')
,cc.pkg_dw_util.fun_des_name(relativecpname,'n03')
,cc.pkg_dw_util.fun_des_rela(ustomerid,'r01')
FROM omi.cm_ent_relative_hs


--视图脱敏
SELECT a.map_type , a.view_schema , a.view_name FROM cc.dw_sm_serve_view a WHERE a.table_name = v_table_name;
SELECT * from dw_sm_serve_view_mapping;
/oracle/app/oracle/product/11.2.0.4/dbhome/bin

--新增表cb_mb_acct
python init_server.py -d ddl -l tbo -c tab -t cb_mb_acct
python init_server.py -d ddl -l omi -c tab -t cb_mb_acct
python init_server.py -d hist -l omi -c tab -t cb_mb_acct

